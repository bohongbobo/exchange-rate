{"ast":null,"code":"var _jsxFileName = \"/Users/bobo/Desktop/exchange-rate/src/Exchange.js\";\nimport React, { Component } from \"react\";\nexport default class Exchange extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amount1: 1,\n      amount2: 0,\n      c1: \"USD\",\n      c2: \"EUR\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        amount1: e.target.value\n      });\n    };\n\n    this.setCurrency1 = e => {\n      this.setState({\n        c1: e.target.value\n      });\n    };\n\n    this.setCurrency2 = e => {\n      this.setState({\n        c2: e.target.value\n      });\n    };\n\n    this.Swich = () => {\n      this.setState({\n        c1: this.state.c2,\n        c2: this.state.c1\n      });\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"aaa\");\n    fetch(`https://api.exchangerate-api.com/v4/latest/${this.state.c1}`).then(response => response.json()).then(data => this.setState({\n      amount2: data.rates[this.state.c2]\n    }));\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    // only update chart if the data has changed\n    if (prevState !== this.state) {\n      fetch(`https://api.exchangerate-api.com/v4/latest/${this.state.c1}`).then(response => response.json()).then(data => this.setState(state => ({\n        amount2: data.rates[this.state.c2] * state.amount1\n      })));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.c1, this.state.c2, React.createElement(\"select\", {\n      onChange: this.setCurrency1,\n      id: \"currency-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"USD\"), React.createElement(\"option\", {\n      value: \"CNY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"CNY\"), React.createElement(\"option\", {\n      value: \"EUR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"EUR\")), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"number\",\n      value: this.state.amount1,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"swap-rate-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"swap\",\n      onClick: this.Swich,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Swap\"), React.createElement(\"div\", {\n      className: \"rate\",\n      id: \"rate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      onChange: this.setCurrency2,\n      id: \"currency-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"CNY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"CNY\"), React.createElement(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"USD\"), React.createElement(\"option\", {\n      value: \"EUR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"EUR\")), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"0\",\n      value: this.state.amount2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/bobo/Desktop/exchange-rate/src/Exchange.js"],"names":["React","Component","Exchange","state","amount1","amount2","c1","c2","handleChange","e","setState","target","value","setCurrency1","setCurrency2","Swich","componentDidMount","console","log","fetch","then","response","json","data","rates","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Exchange extends Component {\n  state = {\n    amount1: 1,\n    amount2: 0,\n    c1: \"USD\",\n    c2: \"EUR\"\n  };\n  handleChange = e => {\n    this.setState({\n      amount1: e.target.value\n    });\n  };\n\n  setCurrency1 = e => {\n    this.setState({\n      c1: e.target.value\n    });\n  };\n\n  setCurrency2 = e => {\n    this.setState({\n      c2: e.target.value\n    });\n  };\n\n  Swich = () => {\n    this.setState({\n      c1: this.state.c2,\n      c2: this.state.c1\n    });\n  };\n\n  async componentDidMount() {\n    console.log(\"aaa\");\n\n    fetch(`https://api.exchangerate-api.com/v4/latest/${this.state.c1}`)\n      .then(response => response.json())\n      .then(data => this.setState({ amount2: data.rates[this.state.c2] }));\n  }\n  async componentDidUpdate(prevProps, prevState) {\n    // only update chart if the data has changed\n    if (prevState !== this.state) {\n      fetch(`https://api.exchangerate-api.com/v4/latest/${this.state.c1}`)\n        .then(response => response.json())\n        .then(data =>\n          this.setState(state => ({\n            amount2: data.rates[this.state.c2] * state.amount1\n          }))\n        );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.c1}\n        {this.state.c2}\n        <select onChange={this.setCurrency1} id=\"currency-one\">\n          <option value=\"USD\">USD</option>\n          <option value=\"CNY\">CNY</option>\n          <option value=\"EUR\">EUR</option>\n        </select>\n        <input\n          type=\"number\"\n          placeholder=\"number\"\n          value={this.state.amount1}\n          onChange={this.handleChange}\n        />\n\n        <div className=\"swap-rate-container\">\n          <button className=\"btn\" id=\"swap\" onClick={this.Swich}>\n            Swap\n          </button>\n          <div className=\"rate\" id=\"rate\"></div>\n        </div>\n        <select onChange={this.setCurrency2} id=\"currency-one\">\n          <option value=\"CNY\">CNY</option>\n          <option value=\"USD\">USD</option>\n          <option value=\"EUR\">EUR</option>\n        </select>\n        {/* {this.state.amount1},\n                {this.state.amount2} */}\n\n        <input type=\"number\" placeholder=\"0\" value={this.state.amount2} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}